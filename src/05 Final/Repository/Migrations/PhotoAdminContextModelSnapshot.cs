// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(PhotoAdminContext))]
    partial class PhotoAdminContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LiberatedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("StreetName")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Domain.CommercialContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Path")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("CommercialContracts");
                });

            modelBuilder.Entity("Domain.Couple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Engaged1Id");

                    b.Property<int?>("Engaged2Id");

                    b.HasKey("Id");

                    b.HasIndex("Engaged1Id");

                    b.HasIndex("Engaged2Id");

                    b.ToTable("Couples");
                });

            modelBuilder.Entity("Domain.DeliveryBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("DeliveryBoxes");
                });

            modelBuilder.Entity("Domain.Engaged", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MakingOfId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MakingOfId");

                    b.ToTable("Engageds");
                });

            modelBuilder.Entity("Domain.ExamplePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("PER_BIRTHDATE")
                        .HasMaxLength(11);

                    b.Property<string>("Cpf")
                        .HasColumnName("PER_CPF")
                        .HasMaxLength(11);

                    b.Property<string>("Name")
                        .HasColumnName("PER_NAME")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("Id");

                    b.ToTable("TAB_EXAMPLE_PERSON");
                });

            modelBuilder.Entity("Domain.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("PaidDate");

                    b.Property<decimal?>("PaidValue");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<int?>("PaymentPlanId");

                    b.Property<int>("PaymentPlan_Id");

                    b.Property<decimal?>("Value");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPlanId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Domain.PaymentPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ExtraValue");

                    b.Property<decimal?>("PercentualDiscount");

                    b.Property<decimal?>("Value");

                    b.Property<decimal?>("ValueDiscount");

                    b.HasKey("Id");

                    b.ToTable("PaymentPlans");
                });

            modelBuilder.Entity("Domain.Wedding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CerimonyId");

                    b.Property<int?>("ContractId");

                    b.Property<int?>("CoupleId");

                    b.Property<int?>("DeliveryBoxId");

                    b.Property<string>("ExtraInformation")
                        .HasMaxLength(300);

                    b.Property<int?>("PackageId");

                    b.Property<int?>("PartyId");

                    b.Property<int?>("PaymentPlanId");

                    b.Property<bool>("SamePlace");

                    b.Property<DateTime>("WeddingTime");

                    b.HasKey("Id");

                    b.HasIndex("CerimonyId");

                    b.HasIndex("ContractId");

                    b.HasIndex("CoupleId");

                    b.HasIndex("DeliveryBoxId");

                    b.HasIndex("PackageId");

                    b.HasIndex("PartyId");

                    b.HasIndex("PaymentPlanId");

                    b.ToTable("Weddings");
                });

            modelBuilder.Entity("Domain.Couple", b =>
                {
                    b.HasOne("Domain.Engaged", "Engaged1")
                        .WithMany()
                        .HasForeignKey("Engaged1Id");

                    b.HasOne("Domain.Engaged", "Engaged2")
                        .WithMany()
                        .HasForeignKey("Engaged2Id");
                });

            modelBuilder.Entity("Domain.Engaged", b =>
                {
                    b.HasOne("Domain.Address", "MakingOf")
                        .WithMany()
                        .HasForeignKey("MakingOfId");
                });

            modelBuilder.Entity("Domain.Payment", b =>
                {
                    b.HasOne("Domain.PaymentPlan", "PaymentPlan")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentPlanId");
                });

            modelBuilder.Entity("Domain.Wedding", b =>
                {
                    b.HasOne("Domain.Address", "Cerimony")
                        .WithMany()
                        .HasForeignKey("CerimonyId");

                    b.HasOne("Domain.CommercialContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Domain.Couple", "Couple")
                        .WithMany()
                        .HasForeignKey("CoupleId");

                    b.HasOne("Domain.DeliveryBox", "DeliveryBox")
                        .WithMany()
                        .HasForeignKey("DeliveryBoxId");

                    b.HasOne("Domain.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Domain.Address", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId");

                    b.HasOne("Domain.PaymentPlan", "PaymentPlan")
                        .WithMany()
                        .HasForeignKey("PaymentPlanId");
                });
#pragma warning restore 612, 618
        }
    }
}
